{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\ReactProjects\\\\ContactManager\\\\contactmanager\\\\ContactManager\\\\src\\\\Components\\\\contacts\\\\EditContact.js\";\nimport React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../Layout/TextInputGroup\";\nimport axios from \"axios\";\n\nvar EditContact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditContact, _Component);\n\n  function EditContact() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditContact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditContact)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (dispatch, e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          phone = _this$state.phone; //check for error\n\n      if (name === \"\") {\n        _this.setState({\n          errors: {\n            name: \"Name is Required\"\n          }\n        });\n\n        return;\n      }\n\n      if (email === \"\") {\n        _this.setState({\n          errors: {\n            email: \"email is Required\"\n          }\n        });\n\n        return;\n      }\n\n      if (phone === \"\") {\n        _this.setState({\n          errors: {\n            phone: \"phone is Required\"\n          }\n        });\n\n        return;\n      }\n\n      console.log(_this.state);\n\n      _this.setState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors: {}\n      });\n\n      _this.props.history.push(\"/\");\n    };\n\n    return _this;\n  }\n\n  _createClass(EditContact, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var id, res, contact;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = this.props.match.params.id;\n                _context.next = 3;\n                return axios.get(\"https://jsonplaceholder.typicode.com/users/\".concat(id));\n\n              case 3:\n                res = _context.sent;\n                contact = res.data;\n                this.setState({\n                  name: contact.name,\n                  email: contact.email,\n                  phone: contact.phone\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          errors = _this$state2.errors;\n      return React.createElement(Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, function (value) {\n        var dispatch = value.dispatch;\n        return React.createElement(\"div\", {\n          className: \"card mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Edit Contact\"), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: _this2.onSubmit.bind(_this2, dispatch),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(TextInputGroup, {\n          label: \"Name\",\n          name: \"name\",\n          placeholder: \"Enter Name..\",\n          value: name,\n          onChange: _this2.onChange,\n          error: errors.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(TextInputGroup, {\n          label: \"Email\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter Email..\",\n          value: email,\n          onChange: _this2.onChange,\n          error: errors.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(TextInputGroup, {\n          label: \"Phone\",\n          name: \"phone\",\n          placeholder: \"Enter Phone..\",\n          value: phone,\n          onChange: _this2.onChange,\n          error: errors.phone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Update Contact\",\n          className: \"btn btn-light btn-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }))));\n      });\n    }\n  }]);\n\n  return EditContact;\n}(Component);\n\nexport default EditContact;","map":{"version":3,"sources":["F:\\ReactProjects\\ContactManager\\contactmanager\\ContactManager\\src\\Components\\contacts\\EditContact.js"],"names":["React","Component","Consumer","TextInputGroup","axios","EditContact","state","name","email","phone","errors","onChange","e","setState","target","value","onSubmit","dispatch","preventDefault","console","log","props","history","push","id","match","params","get","res","contact","data","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../Layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //check for error\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    console.log(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name..\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email..\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone..\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n"]},"metadata":{},"sourceType":"module"}